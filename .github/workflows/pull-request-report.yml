name: Pull Request Report (PDF)

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  generate-pdf-report:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 3: Install dependencies (puppeteer and markdown-pdf)
      - name: Install dependencies
        run: npm install puppeteer markdown-pdf

      # Step 4: Fetch Pull Request details
      - name: Fetch PR details
        id: pr-details
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_DATE="${{ github.event.pull_request.created_at }}"
          
          # Fetch commits for the PR (excluding merge commits)
          COMMIT_LIST=$(git log --no-merges --pretty=format:"| %s | %ad | %an |" --date=short)

          # Save to a markdown file following the template
          echo "![Logo](https://github.com/${{ github.repository }}/raw/main/public/logo192.png)" > report.md
          echo "# PR Title: ${PR_TITLE} (#${PR_NUMBER})" >> report.md
          echo "*Date: ${PR_DATE}*" >> report.md
          echo "---" >> report.md
          echo "" >> report.md

          echo "### PR Description:" >> report.md
          if [ -n "$PR_BODY" ]; then
            echo "${PR_BODY}" >> report.md
          else
            echo "No description provided." >> report.md
          fi
          echo "" >> report.md
          
          echo "---" >> report.md
          echo "" >> report.md

          echo "### Commits:" >> report.md
          echo "| Commit Message | Date | Author |" >> report.md
          echo "|----------------|------|--------|" >> report.md
          echo "${COMMIT_LIST}" >> report.md

      # Step 5: Convert markdown to HTML and generate PDF
      - name: Generate PDF from Markdown
        run: |
          cat report.md
          npx markdown-pdf report.md

      # Step 6: Upload the generated PDF as an artifact
      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v3
        with:
          name: pull-request-report
          path: report.pdf
