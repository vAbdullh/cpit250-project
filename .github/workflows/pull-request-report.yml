name: Pull Request Report (PDF)

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  generate-pdf-report:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 3: Install dependencies (puppeteer and markdown-pdf)
      - name: Install dependencies
        run: npm install puppeteer markdown-pdf

      # Step 4: Fetch PR details and files changed
      - name: Fetch PR details and files changed
        id: pr-details
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_DATE="${{ github.event.pull_request.created_at }}"
          
          # Fetch list of files changed in the PR
          FILES_CHANGED=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" | jq -r '.[].filename')
          
          # Save to a markdown file
          echo "## Pull Request #${PR_NUMBER}: ${PR_TITLE}" > report.md
          echo "### Author: ${PR_AUTHOR}" >> report.md
          echo "### Date: ${PR_DATE}" >> report.md
          echo "" >> report.md
          echo "### PR Body" >> report.md
          echo "${PR_BODY}" >> report.md
          echo "" >> report.md
          echo "### Files Changed" >> report.md
          
          # Add files changed to the markdown
          echo "$FILES_CHANGED" | while read -r file; do
            echo "- $file" >> report.md
          done

      # Step 5: Convert markdown to HTML and generate PDF
      - name: Generate PDF from Markdown
        run: |
          cat report.md
          npx markdown-pdf report.md

      # Step 6: Upload the generated PDF as an artifact
      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v3
        with:
          name: pull-request-report
          path: report.pdf
